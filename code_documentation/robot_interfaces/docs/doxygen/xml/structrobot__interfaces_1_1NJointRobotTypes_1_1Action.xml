<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action" kind="struct" language="C++" prot="public">
    <compoundname>robot_interfaces::NJointRobotTypes::Action</compoundname>
    <basecompoundref refid="classrobot__interfaces_1_1Loggable" prot="public" virt="non-virtual">robot_interfaces::Loggable</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad19a93b677bdc60e655071743acf160e" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::torque</definition>
        <argsstring></argsstring>
        <name>torque</name>
        <briefdescription>
<para>Desired torque command (in addition to position controller). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="44" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad0d8104b1e521c7d0a316d093155e3a8" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <briefdescription>
<para>Desired position. Set to NaN to disable position controller. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="46" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a16eb24df6bdbc10c8ce08c0621723b92" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::position_kp</definition>
        <argsstring></argsstring>
        <name>position_kp</name>
        <briefdescription>
<para>P-gain for position controller. If NaN, default is used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="48" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a3690aa864884fb51fb411d26eeea3fd4" prot="public" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::position_kd</definition>
        <argsstring></argsstring>
        <name>position_kd</name>
        <briefdescription>
<para>D-gain for position controller. If NaN, default is used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="50" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a7f645ab9be5cee75974d9cf1d4300c67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::serialize</definition>
        <argsstring>(Archive &amp;archive)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="53" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a4d4b702fdf41cc9713c46edbbb26db51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::get_name</definition>
        <argsstring>() override</argsstring>
        <name>get_name</name>
        <reimplements refid="classrobot__interfaces_1_1Loggable_1a19635ebc166379f11fe4c8e58153243a">get_name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="58" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a8fe4c10c53d72e4f8bb9c09d3be9b39d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;double&gt; &gt; robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::get_data</definition>
        <argsstring>() override</argsstring>
        <name>get_data</name>
        <reimplements refid="classrobot__interfaces_1_1Loggable_1a28ffee45cf66a84d16b2c907ed10367c">get_data</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="63" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="63" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1aeb7fbd93adcc0140b5db42298211fe9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::Action</definition>
        <argsstring>(Vector torque=Vector::Zero(), Vector position=None(), Vector position_kp=None(), Vector position_kd=None())</argsstring>
        <name>Action</name>
        <param>
          <type>Vector</type>
          <declname>torque</declname>
          <defval>Vector::Zero()</defval>
        </param>
        <param>
          <type>Vector</type>
          <declname>position</declname>
          <defval><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" kindref="member">None</ref>()</defval>
        </param>
        <param>
          <type>Vector</type>
          <declname>position_kp</declname>
          <defval><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" kindref="member">None</ref>()</defval>
        </param>
        <param>
          <type>Vector</type>
          <declname>position_kd</declname>
          <defval><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" kindref="member">None</ref>()</defval>
        </param>
        <briefdescription>
<para>Create action with desired torque and (optional) position. </para>        </briefdescription>
        <detaileddescription>
<para>The resulting torque command sent to the robot is <verbatim>sent_torque = torque + PD(position)
</verbatim></para><para>To disable the position controller, set the target position to NaN. The controller is executed joint-wise, so it is possible to run it only for some joints by setting a target position for these joints and setting the others to NaN.</para><para>The specified torque is always added to the result of the position controller, so if you only want to run the position controller, make sure to set <computeroutput>torque</computeroutput> to zero for all joints.</para><para>For more explicit code, the static factory methods <computeroutput>Troque</computeroutput>, <computeroutput>Position</computeroutput>, <computeroutput>TorqueAndPosition</computeroutput> and <computeroutput>Zero</computeroutput> should be used instead directly creating actions through this constuctor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torque</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired torque. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired position. Set values to NaN to disable position controller for the corresponding joints </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_kp</parametername>
</parameternamelist>
<parameterdescription>
<para>P-gains for the position controller. Set to NaN to use default values. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_kd</parametername>
</parameternamelist>
<parameterdescription>
<para>D-gains for the position controller. Set to NaN to use default values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="118" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="118" bodyend="127"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ae5aae444c808728af59a8a5b27035293" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action" kindref="compound">Action</ref></type>
        <definition>static Action robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::Torque</definition>
        <argsstring>(Vector torque)</argsstring>
        <name>Torque</name>
        <param>
          <type>Vector</type>
          <declname>torque</declname>
        </param>
        <briefdescription>
<para>Create an action that only contains a torque command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torque</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired torque.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pure &quot;torque action&quot;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="136" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad60ea89acc73e544634b47a74797afd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action" kindref="compound">Action</ref></type>
        <definition>static Action robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::Position</definition>
        <argsstring>(Vector position, Vector kp=None(), Vector kd=None())</argsstring>
        <name>Position</name>
        <param>
          <type>Vector</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Vector</type>
          <declname>kp</declname>
          <defval><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" kindref="member">None</ref>()</defval>
        </param>
        <param>
          <type>Vector</type>
          <declname>kd</declname>
          <defval><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" kindref="member">None</ref>()</defval>
        </param>
        <briefdescription>
<para>Create an action that only contains a position command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>P-gain for position controller. If not set, default is used. Set to NaN for specific joints to use default for this joint. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>D-gain for position controller. If not set, default is used. Set to NaN for specific joints to use default for this joint.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pure &quot;position action&quot;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="154" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a076108da9106e45e9e8ab0b89e4c66e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action" kindref="compound">Action</ref></type>
        <definition>static Action robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::TorqueAndPosition</definition>
        <argsstring>(Vector torque, Vector position, Vector position_kp=None(), Vector position_kd=None())</argsstring>
        <name>TorqueAndPosition</name>
        <param>
          <type>Vector</type>
          <declname>torque</declname>
        </param>
        <param>
          <type>Vector</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Vector</type>
          <declname>position_kp</declname>
          <defval><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" kindref="member">None</ref>()</defval>
        </param>
        <param>
          <type>Vector</type>
          <declname>position_kd</declname>
          <defval><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" kindref="member">None</ref>()</defval>
        </param>
        <briefdescription>
<para>Create an action with both torque and position commands. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torque</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired torque. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired position. Set to NaN for specific joints to disable position control for this joint. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>P-gain for position controller. If not set, default is used. Set to NaN for specific joints to use default for this joint. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>D-gain for position controller. If not set, default is used. Set to NaN for specific joints to use default for this joint.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action" kindref="compound">Action</ref> with both torque and position commands. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="176" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="176" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad6fa1cd952afc4f02fcabc4221802b47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action" kindref="compound">Action</ref></type>
        <definition>static Action robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::Zero</definition>
        <argsstring>()</argsstring>
        <name>Zero</name>
        <briefdescription>
<para>Create a zero-torque action. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Zero-torque action with position control disabled. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="189" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector</type>
        <definition>static Vector robot_interfaces::NJointRobotTypes&lt; N &gt;::Action::None</definition>
        <argsstring>()</argsstring>
        <name>None</name>
        <briefdescription>
<para>Create a NaN-Vector. </para>        </briefdescription>
        <detaileddescription>
<para>Helper function to set defaults for position.</para><para><simplesect kind="return"><para>Vector with all elements set to NaN. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="200" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="200" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="85">
        <label>robot_interfaces::Loggable</label>
        <link refid="classrobot__interfaces_1_1Loggable"/>
      </node>
      <node id="84">
        <label>robot_interfaces::NJointRobotTypes&lt; N &gt;::Action</label>
        <link refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="87">
        <label>robot_interfaces::Loggable</label>
        <link refid="classrobot__interfaces_1_1Loggable"/>
      </node>
      <node id="86">
        <label>robot_interfaces::NJointRobotTypes&lt; N &gt;::Action</label>
        <link refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action"/>
        <childnode refid="87" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/robot_interfaces/n_joint_robot_types.hpp" line="42" column="1" bodyfile="include/robot_interfaces/n_joint_robot_types.hpp" bodystart="40" bodyend="204"/>
    <listofallmembers>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1aeb7fbd93adcc0140b5db42298211fe9d" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>Action</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a8fe4c10c53d72e4f8bb9c09d3be9b39d" prot="public" virt="virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>get_data</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a4d4b702fdf41cc9713c46edbbb26db51" prot="public" virt="virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>get_name</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ab963d5faa78618bdaae53dc70ca936ae" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>None</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad60ea89acc73e544634b47a74797afd1" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>Position</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad0d8104b1e521c7d0a316d093155e3a8" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>position</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a3690aa864884fb51fb411d26eeea3fd4" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>position_kd</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a16eb24df6bdbc10c8ce08c0621723b92" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>position_kp</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a7f645ab9be5cee75974d9cf1d4300c67" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>serialize</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad19a93b677bdc60e655071743acf160e" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>torque</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ae5aae444c808728af59a8a5b27035293" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>Torque</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1a076108da9106e45e9e8ab0b89e4c66e6" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>TorqueAndPosition</name></member>
      <member refid="structrobot__interfaces_1_1NJointRobotTypes_1_1Action_1ad6fa1cd952afc4f02fcabc4221802b47" prot="public" virt="non-virtual"><scope>robot_interfaces::NJointRobotTypes::Action</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
