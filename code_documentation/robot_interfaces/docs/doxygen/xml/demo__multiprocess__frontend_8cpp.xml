<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="demo__multiprocess__frontend_8cpp" kind="file" language="C++">
    <compoundname>demo_multiprocess_frontend.cpp</compoundname>
    <includes local="no">memory</includes>
    <includes refid="robot__frontend_8hpp" local="yes">robot_interfaces/robot_frontend.hpp</includes>
    <includes refid="types_8hpp" local="yes">types.hpp</includes>
    <incdepgraph>
      <node id="456">
        <label>atomic</label>
      </node>
      <node id="454">
        <label>time_series/time_series.hpp</label>
      </node>
      <node id="467">
        <label>time_series/multiprocess_time_series.hpp</label>
      </node>
      <node id="468">
        <label>status.hpp</label>
        <link refid="status_8hpp"/>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
      </node>
      <node id="462">
        <label>robot_interfaces/global_signal_handler.hpp</label>
        <link refid="global__signal__handler_8hpp"/>
      </node>
      <node id="457">
        <label>cstdint</label>
      </node>
      <node id="463">
        <label>robot_interfaces/loggable.hpp</label>
        <link refid="loggable_8hpp_source"/>
      </node>
      <node id="453">
        <label>cmath</label>
      </node>
      <node id="469">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="461">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="466">
        <label>string</label>
      </node>
      <node id="449">
        <label>demos/demo_multiprocess_frontend.cpp</label>
        <link refid="demo_multiprocess_frontend.cpp"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="451">
        <label>robot_interfaces/robot_frontend.hpp</label>
        <link refid="robot__frontend_8hpp_source"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>real_time_tools/checkpoint_timer.hpp</label>
      </node>
      <node id="460">
        <label>real_time_tools/process_manager.hpp</label>
      </node>
      <node id="472">
        <label>types.hpp</label>
        <link refid="types_8hpp"/>
      </node>
      <node id="470">
        <label>vector</label>
      </node>
      <node id="458">
        <label>pybind11/embed.h</label>
      </node>
      <node id="464">
        <label>robot_interfaces/robot_data.hpp</label>
        <link refid="robot__data_8hpp"/>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>iostream</label>
      </node>
      <node id="455">
        <label>robot_interfaces/robot_backend.hpp</label>
        <link refid="robot__backend_8hpp_source"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
      </node>
      <node id="452">
        <label>algorithm</label>
      </node>
      <node id="471">
        <label>robot_interfaces/robot_driver.hpp</label>
        <link refid="robot__driver_8hpp_source"/>
        <childnode refid="466" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="demo__multiprocess__frontend_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_multiprocess_frontend.cpp" line="23" column="1" bodyfile="demos/demo_multiprocess_frontend.cpp" bodystart="23" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Minimal demo of robot frontend running in its own process. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz, Felix Widmaier license License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019-2020, Max Planck Gesellschaft. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;robot_interfaces/robot_frontend.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8hpp" kindref="compound">types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerobot__interfaces_1_1demo" kindref="compound">robot_interfaces::demo</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classrobot__interfaces_1_1RobotFrontend" kindref="compound">robot_interfaces::RobotFrontend&lt;Action, Observation&gt;</ref><sp/>Frontend;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classrobot__interfaces_1_1MultiProcessRobotData" kindref="compound">robot_interfaces::MultiProcessRobotData&lt;Action, Observation&gt;</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiProcessData;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>shared<sp/>memory<sp/>is<sp/>managed<sp/>by<sp/>the<sp/>backend<sp/>process,<sp/>so<sp/>set<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is_master<sp/>argument<sp/>to<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data_ptr<sp/>=</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MultiProcessData&gt;(</highlight><highlight class="stringliteral">&quot;multiprocess_demo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>Frontend<sp/>frontend(data_ptr);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrobot__interfaces_1_1demo_1_1Action" kindref="compound">Action</ref><sp/>action;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrobot__interfaces_1_1demo_1_1Observation" kindref="compound">Observation</ref><sp/>observation;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simulated<sp/>action<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>dof<sp/>going<sp/>from<sp/>200<sp/>to<sp/>300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>going<sp/>from<sp/>300<sp/>to<sp/>200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>value<sp/>=<sp/>200;<sp/>value<sp/>&lt;=<sp/>300;<sp/>value++)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action.values[0]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action.values[1]<sp/>=<sp/>500<sp/>-<sp/>value;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>action<sp/>will<sp/>be<sp/>stored<sp/>at<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_interfaces::TimeIndex<sp/>index<sp/>=</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frontend.append_desired_action(action);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getting<sp/>the<sp/>observation<sp/>corresponding<sp/>to<sp/>the<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>action,<sp/>i.e.<sp/>at<sp/>the<sp/>same<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>observation<sp/>=<sp/>frontend.get_observation(index);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action.print(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>observation.print(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="demos/demo_multiprocess_frontend.cpp"/>
  </compounddef>
</doxygen>
